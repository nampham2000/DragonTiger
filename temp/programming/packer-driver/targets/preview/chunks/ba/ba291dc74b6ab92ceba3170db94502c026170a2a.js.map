{"version":3,"sources":["file:///Users/waostudio/Downloads/Telegram%20Desktop/TigerDragon4/assets/Scripts/NetworkConnect.ts"],"names":["_decorator","Component","Colyseus","ccclass","property","NetworkConnect","client","room","start","Client","useSSL","hostname","connect","joinById","console","log","sessionId","state","players","onMessage","message","onStateChange","onLeave","code","e","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAGdC,MAAAA,Q;;;;;;;;;OAFD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;gCAKjBK,c,WADZF,OAAO,CAAC,gBAAD,C,2BAAR,MACaE,cADb,SACoCJ,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAK5CK,MAL4C;AAAA,eAM5CC,IAN4C;AAAA;;AAQ5CC,QAAAA,KAAK,GAAG;AACN;AACA;AACA,eAAKF,MAAL,GAAc,IAAI;AAAA;AAAA,oCAASG,MAAb,EACT,KAAKC,MAAL,GAAc,KAAd,GAAsB,IADb,YACuB,KAAKC,QAD5B,CAAd,CAHM,CAON;;AACA,eAAKC,OAAL;AACD;;AAEKA,QAAAA,OAAO,GAAG;AAAA;;AAAA;AACd,gBAAI;AACF;AACA,cAAA,KAAI,CAACL,IAAL,SAAkB,KAAI,CAACD,MAAL,CAAYO,QAAZ,CAAqB,OAArB,CAAlB;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAI,CAACR,IAAL,CAAUS,SAA3C;AAEAF,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAI,CAACR,IAAL,CAAUU,KAAV,CAAgBC,OAAvC;;AACA,cAAA,KAAI,CAACX,IAAL,CAAUY,SAAV,CAAoB,YAApB,EAAmCC,OAAD,IAAa;AAC7CN,gBAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBK,OAApB,EAF6C,CAG7C;AACD,eAJD;;AAMA,cAAA,KAAI,CAACb,IAAL,CAAUc,aAAV,CAAyBJ,KAAD,IAAW;AACjCH,gBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,KAA/B;AACD,eAFD;;AAIA,cAAA,KAAI,CAACV,IAAL,CAAUe,OAAV,CAAmBC,IAAD,IAAU;AAC1BT,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBQ,IAAxB;AACD,eAFD;AAGD,aApBD,CAoBE,OAAOC,CAAP,EAAU;AACVV,cAAAA,OAAO,CAACW,KAAR,CAAcD,CAAd;AACD;AAvBa;AAwBf;;AA3C2C,O,2EAC3CpB,Q;;;;;iBAAoB,mC;;+EACpBA,Q;;;;;iBAAgB,E;;iFAChBA,Q;;;;;iBAAkB,I","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nconst { ccclass, property } = _decorator;\n\nimport Colyseus from \"db://colyseus-sdk/colyseus.js\";\n\n@ccclass(\"NetworkConnect\")\nexport class NetworkConnect extends Component {\n  @property hostname = \"7bb3-115-79-59-222.ngrok-free.app\";\n  @property port = 80;\n  @property useSSL = true;\n\n  client!: Colyseus.Client;\n  room!: Colyseus.Room;\n\n  start() {\n    // Instantiate Colyseus Client\n    // connects into (ws|wss)://hostname[:port]\n    this.client = new Colyseus.Client(\n      `${this.useSSL ? \"wss\" : \"ws\"}://${this.hostname}`\n    );\n\n    // Connect into the room\n    this.connect();\n  }\n\n  async connect() {\n    try {\n      // const a = [...this.room.state.players.values()]\n      this.room = await this.client.joinById(\"VDGHY\");\n      console.log(\"joined successfully!\");\n      console.log(\"user's sessionId:\", this.room.sessionId);\n\n      console.log(\"players\", this.room.state.players);\n      this.room.onMessage(\"playerList\", (message) => {\n        console.log(\"message received from server\");\n        console.log(\"Mess\", message);\n        // console.log(\"players\", [...this.room.state.players.values()]);\n      });\n\n      this.room.onStateChange((state) => {\n        console.log(\"onStateChange: \", state);\n      });\n\n      this.room.onLeave((code) => {\n        console.log(\"onLeave:\", code);\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n"]}