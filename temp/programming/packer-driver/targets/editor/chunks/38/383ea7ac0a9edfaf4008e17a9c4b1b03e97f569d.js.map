{"version":3,"sources":["file:///Users/waostudio/Downloads/Telegram%20Desktop/TigerDragon4/assets/Scripts/GameController.ts"],"names":["_decorator","Component","Label","Node","tween","Vec3","Animation","SpriteFrame","Sprite","math","Graphics","Color","instantiate","Prefab","Button","Chip","NetworkConnect","ccclass","property","GameController","type","UserBetTigerIcon","UserBetDragonIcon","UserBetTieIcon","clonePosCardL","clonePosCardR","randomValueCardR","randomValueCardL","balanceUser","currentCol","currentRow","currentRowClone","currentColL","currentRowL","previousPrefabType","previousPrefabTypeL","winIntroType","numRows","numCols","cellWidth","cellHeight","countdownTimerBet","cloneBalance","GameEnd","start","CardNodeL","position","clone","CardNodeR","shuffelCard","drawRectangle","drawRectangle1","drawRectangle2","drawRectangle3","drawRectangleTotalUser","drawRectanglel","AvatarL1","AvatarL2","AvatarL3","AvatarL4","AvatarL5","AvatarL6","drawGrid","GridL","GridR","drawRectangleTotal","update","deltaTime","countDownLb","string","toString","listCancelBet","node","active","room","addScore","Score","betLB","betValueIcon","BalancerLb","betTigerBtn","chipNode","UserBet","betTigerLb","ToatalUser","createSpriteNode","ValueAnim","betDragonBtn","betDragonLb","ValueAnim1","betTieBtn","betTieLb","ValueAnim2","to","call","CardNodeAnim","RestartBalnce","setTimeout","getComponent","spriteFrame","bankCard","x","y","displayImages","console","log","startCountdown","StartBet","play","displayImagesCardR","campareCard","createGrid","createGridNot","randomRangeInt","listCardRes","sprite","error","WinNotice","DragonWinintro","on","EventType","FINISHED","TigerNode","DragonNode","tweenChildrenToPosition","off","ExplosionDra","width","height","graphics","AvatarNode","addComponent","lightGray","fillColor","glowColor","BLACK","strokeColor","lineWidth","roundRect","fill","stroke","AvatarNode1","AvatarNode2","AvatarNode3","number","circleRadius","WHITE","circle","list","ToatalAv","centerX","centerY","pillHeight","pillWidth","pillRadius","bodyWidth","rect","arc","Math","PI","Avatar","posX","PosY","PosNode","spriteNode","scale","spriteComponent","buttonPub","addChild","createSpriteNodePay","posY","posNode","spriteFrames","i","length","delay","Grid","gridSize","min","moveTo","lineTo","j","prefabType","Tie","Under","Over","name","clearGrid","cell","pref","removeAllChildren","clearGridNt","prefL","timeCountDown","timereset","countdownInterval","setInterval","clearInterval","Cancel","CancelBetTiger","CancelBetDragon","CancelBetTie","targetPosition","duration","children","forEach","child","removeFromParent","PayUser","PayUserSprite"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Component,\n  Label,\n  Node,\n  tween,\n  Vec3,\n  Animation,\n  SpriteFrame,\n  Sprite,\n  math,\n  log,\n  Graphics,\n  Color,\n  instantiate,\n  Prefab,\n  Button,\n  CCInteger,\n} from \"cc\";\nimport { Chip } from \"./Chip\";\nimport { NetworkConnect } from \"./NetworkConnect\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GameController\")\nexport class GameController extends Component {\n  @property({\n    type: Label,\n  })\n  private betTigerLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private betDragonLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private betTieLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private BalancerLb: Label;\n\n  @property({\n    type: Chip,\n  })\n  private chipNode: Chip;\n\n  @property({\n    type: Node,\n  })\n  private CardNodeL: Node;\n\n  @property({\n    type: Node,\n  })\n  private CardNodeR: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarNode1: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarNode2: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarNode3: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL1: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL2: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL3: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL4: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL5: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL6: Node;\n\n  @property({\n    type: Node,\n  })\n  private GridL: Node;\n  @property({\n    type: Node,\n  })\n  private GridR: Node;\n\n  @property({\n    type: Node,\n  })\n  private ValueAnim: Node;\n\n  @property({\n    type: Node,\n  })\n  private ValueAnim1: Node;\n\n  @property({\n    type: Node,\n  })\n  private ValueAnim2: Node;\n\n  @property({\n    type: Animation,\n  })\n  private CardNodeAnim: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private WinNotice: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private DragonWinintro: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private DragonNode: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private TigerNode: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private StartBet: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private ExplosionDra: Animation;\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listCardRes: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private bankCard: SpriteFrame;\n\n  @property(Node)\n  pref: Node;\n\n  @property(Node)\n  prefL: Node;\n\n  @property(Prefab)\n  private Over: Prefab = null;\n\n  @property(Prefab)\n  private Under: Prefab = null;\n\n  @property(Prefab)\n  private Tie: Prefab = null;\n\n  @property(Label)\n  private countDownLb: Label;\n\n  @property({\n    type: Node,\n  })\n  private ToatalAv: Node[] = [];\n\n  @property({\n    type: Node,\n  })\n  private ToatalUser: Node[] = [];\n\n  @property({\n    type: Node,\n  })\n  private PayUser: Node[] = [];\n\n  @property({\n    type: Label,\n  })\n  private BalanceList: Label[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private PayUserSprite: SpriteFrame[] = [];\n\n  @property({ type: [Button] })\n  listCancelBet: Button[] = [];\n\n  @property(NetworkConnect)\n  private NetworkConnect: NetworkConnect;\n\n  private UserBetTigerIcon: number = 0;\n  private UserBetDragonIcon: number = 0;\n  private UserBetTieIcon: number = 0;\n  private clonePosCardL: Vec3 = new Vec3();\n  private clonePosCardR: Vec3 = new Vec3();\n  private randomValueCardR: number = 0;\n  private randomValueCardL: number = 0;\n  private balanceUser: number = 300;\n  private currentCol = 0;\n  private currentRow = 0;\n  private currentRowClone = 0;\n  private currentColL = 0;\n  private currentRowL = 0;\n  previousPrefabType = null;\n  previousPrefabTypeL = null;\n  winIntroType;\n  private numRows: number = 6;\n  private numCols: number = 20;\n  private cellWidth: number = 27;\n  private cellHeight: number = 30;\n  private countdownTimerBet: number = 30;\n  private cloneBalance: number = 0;\n  private GameEnd: boolean = false;\n\n  start() {\n    this.clonePosCardL = this.CardNodeL.position.clone();\n    this.clonePosCardR = this.CardNodeR.position.clone();\n    this.shuffelCard();\n    this.drawRectangle();\n    this.drawRectangle1();\n    this.drawRectangle2();\n    this.drawRectangle3();\n    this.drawRectangleTotalUser(0);\n    this.drawRectangleTotalUser(1);\n    this.drawRectangleTotalUser(2);\n\n    this.drawRectanglel(this.AvatarL1);\n    this.drawRectanglel(this.AvatarL2);\n    this.drawRectanglel(this.AvatarL3);\n    this.drawRectanglel(this.AvatarL4);\n    this.drawRectanglel(this.AvatarL5);\n    this.drawRectanglel(this.AvatarL6);\n    this.drawGrid(this.GridL);\n    this.drawGrid(this.GridR);\n    this.drawRectangleTotal(0);\n    this.drawRectangleTotal(1);\n    this.drawRectangleTotal(2);\n  }\n\n  update(deltaTime: number) {\n    this.countDownLb.string = this.countdownTimerBet.toString();\n    if (this.cloneBalance > 0) {\n      this.listCancelBet[0].node.active = true;\n    } else {\n      this.listCancelBet[0].node.active = false;\n    }\n    if (this.NetworkConnect.room) {\n      // this.NetworkConnect.room.onMessage(\"playerJoin\", (message) => {\n      //   console.log(\"message received from server\");\n      //   console.log(\"Mess\", message);\n      //   this.AvatarL1.active = true;\n      // });\n    }\n  }\n\n  private addScore(Score: number, betLB: Label, betValueIcon: number) {\n    if (this.balanceUser >= Score) {\n      betValueIcon = betValueIcon + Score;\n      this.balanceUser = this.balanceUser - Score;\n      this.cloneBalance = this.cloneBalance + Score;\n      this.BalancerLb.string = this.balanceUser.toString();\n      betLB.string = betValueIcon.toString();\n    }\n  }\n\n  private betTigerBtn() {\n    if (this.balanceUser >= this.chipNode.UserBet && this.GameEnd === false) {\n      this.addScore(\n        this.chipNode.UserBet,\n        this.betTigerLb,\n        this.UserBetTigerIcon\n      );\n      this.UserBetTigerIcon += this.chipNode.UserBet;\n      this.ToatalUser[2].active = true;\n      this.listCancelBet[1].node.active = true;\n\n      this.createSpriteNode(-406, 200, this.ValueAnim);\n    }\n  }\n\n  private betDragonBtn() {\n    if (this.balanceUser >= this.chipNode.UserBet && this.GameEnd === false) {\n      this.addScore(\n        this.chipNode.UserBet,\n        this.betDragonLb,\n        this.UserBetDragonIcon\n      );\n      this.UserBetDragonIcon += this.chipNode.UserBet;\n      this.ToatalUser[0].active = true;\n      this.listCancelBet[3].node.active = true;\n\n      this.createSpriteNode(-951, 193, this.ValueAnim1);\n    }\n  }\n\n  private betTieBtn() {\n    if (this.balanceUser >= this.chipNode.UserBet && this.GameEnd === false) {\n      this.addScore(this.chipNode.UserBet, this.betTieLb, this.UserBetTieIcon);\n      this.listCancelBet[2].node.active = true;\n      this.UserBetTieIcon += this.chipNode.UserBet;\n      this.ToatalUser[1].active = true;\n      this.createSpriteNode(-670, 221, this.ValueAnim2);\n    }\n  }\n\n  private shuffelCard() {\n    tween(this.CardNodeL)\n      .to(0.4, { position: new Vec3(1, 70) })\n      .call(() => {\n        this.CardNodeL.active = false;\n        this.CardNodeR.active = false;\n        this.CardNodeAnim.node.active = true;\n        this.RestartBalnce();\n        setTimeout(() => {\n          this.CardNodeAnim.node.active = false;\n          this.CardNodeL.active = true;\n          this.CardNodeR.active = true;\n          this.CardNodeR.getComponent(Sprite).spriteFrame = this.bankCard;\n          this.CardNodeL.getComponent(Sprite).spriteFrame = this.bankCard;\n          tween(this.CardNodeL)\n            .to(0.4, { position: this.clonePosCardL })\n            .call(() => {\n              this.GameEnd = false;\n              setTimeout(() => {\n                tween(this.CardNodeL)\n                  .to(0.4, {\n                    position: new Vec3(\n                      this.CardNodeL.position.x + 100,\n                      this.CardNodeL.position.y - 300\n                    ),\n                  })\n                  .call(() => {\n                    this.displayImages();\n                  })\n                  .start();\n              }, 30000); //Waitime\n            })\n            .start();\n\n          tween(this.CardNodeR)\n            .to(0.4, { position: this.clonePosCardR })\n            .call(() => {\n              console.log(\"bat dau dem\");\n              this.startCountdown(this.countdownTimerBet, 30);\n              this.StartBet.play(\"Startbet\");\n              setTimeout(() => {\n                tween(this.CardNodeR)\n                  .to(0.4, {\n                    position: new Vec3(\n                      this.CardNodeR.position.x - 100,\n                      this.CardNodeR.position.y - 300\n                    ),\n                  })\n                  .call(() => {\n                    this.displayImagesCardR();\n                    this.campareCard();\n                    this.createGrid();\n                    this.createGridNot();\n                  })\n                  .start();\n                this.GameEnd = true;\n                this.StartBet.play(\"EndBet\");\n              }, 30000); //WaitTime\n            })\n            .start();\n        }, 3000); //ShuffleTime\n      })\n      .start();\n\n    tween(this.CardNodeR)\n      .to(0.4, { position: new Vec3(1, 70) })\n      .start();\n  }\n\n  private displayImages() {\n    this.randomValueCardL = math.randomRangeInt(1, 13);\n    console.log(this.randomValueCardL);\n\n    const spriteFrame = this.listCardRes[this.randomValueCardL - 1];\n    const sprite = this.CardNodeL.getComponent(Sprite);\n    if (sprite && spriteFrame) {\n      sprite.spriteFrame = spriteFrame;\n    } else {\n      console.error(\"Sprite or SpriteFrame is missing!\");\n    }\n  }\n\n  private displayImagesCardR() {\n    this.randomValueCardR = math.randomRangeInt(1, 13);\n    console.log(this.randomValueCardR);\n    const spriteFrame = this.listCardRes[this.randomValueCardR - 1];\n    const sprite = this.CardNodeR.getComponent(Sprite);\n    if (sprite && spriteFrame) {\n      sprite.spriteFrame = spriteFrame;\n    } else {\n      console.error(\"Sprite or SpriteFrame is missing!\");\n    }\n  }\n\n  private campareCard() {\n    if (this.randomValueCardR > this.randomValueCardL) {\n      this.balanceUser = this.balanceUser + this.UserBetTigerIcon * 2;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.WinNotice.play(\"TigerWin\");\n      this.DragonWinintro.play(\"TigerIntro\");\n      this.winIntroType = \"TigerIntro\";\n      this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\n        if (this.winIntroType === \"TigerIntro\") {\n          this.TigerNode.play(\"TigerAttack\");\n          // this.winIntroType = \"TigerAttack\";\n          this.TigerNode.on(Animation.EventType.FINISHED, () => {\n            this.DragonNode.play(\"DragonHurt\");\n            this.DragonNode.on(Animation.EventType.FINISHED, () => {\n              this.DragonNode.play(\"DragonIde\");\n              this.tweenChildrenToPosition(\n                this.ValueAnim,\n                new Vec3(30, 560),\n                0.5\n              );\n              this.tweenChildrenToPosition(\n                this.ValueAnim1,\n                new Vec3(30, 560),\n                0.5\n              );\n              this.tweenChildrenToPosition(\n                this.ValueAnim2,\n                new Vec3(30, 560),\n                0.5\n              );\n            });\n\n            this.TigerNode.play(\"TigerIde\");\n\n            // this.DragonNode.play(\"DragonIde\");\n            setTimeout(() => {\n              this.shuffelCard();\n            }, 4000);\n            this.TigerNode.off(Animation.EventType.FINISHED);\n          });\n        }\n      });\n    }\n    if (this.randomValueCardR < this.randomValueCardL) {\n      this.balanceUser = this.balanceUser + this.UserBetDragonIcon * 2;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.WinNotice.play(\"DragonWinIcon\");\n      this.DragonWinintro.play(\"DragonIntro\");\n      // Sử dụng biến để xác định loại WinIntro\n      this.winIntroType = \"DragonIntro\";\n      this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\n        // Kiểm tra loại WinIntro\n        if (this.winIntroType === \"DragonIntro\") {\n          this.DragonNode.play(\"DragonAttack\");\n          this.DragonNode.on(Animation.EventType.FINISHED, () => {\n            this.ExplosionDra.play();\n            this.TigerNode.play(\"TigerHurt\");\n            this.TigerNode.on(Animation.EventType.FINISHED, () => {\n              this.TigerNode.play(\"TigerIde\");\n              this.tweenChildrenToPosition(\n                this.ValueAnim,\n                new Vec3(30, 560),\n                0.5\n              );\n              this.tweenChildrenToPosition(\n                this.ValueAnim1,\n                new Vec3(30, 560),\n                0.5\n              );\n              this.tweenChildrenToPosition(\n                this.ValueAnim2,\n                new Vec3(30, 560),\n                0.5\n              );\n            });\n            this.DragonNode.play(\"DragonIde\");\n\n            setTimeout(() => {\n              this.shuffelCard();\n            }, 4000);\n            this.DragonNode.off(Animation.EventType.FINISHED);\n          });\n        }\n      });\n    }\n    if (this.randomValueCardR === this.randomValueCardL) {\n      this.balanceUser = this.balanceUser + this.UserBetTieIcon * 18;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.tweenChildrenToPosition(this.ValueAnim, new Vec3(30, 560), 0.5);\n      this.tweenChildrenToPosition(this.ValueAnim1, new Vec3(30, 560), 0.5);\n      this.tweenChildrenToPosition(this.ValueAnim2, new Vec3(30, 560), 0.5);\n      setTimeout(() => {\n        this.shuffelCard();\n      }, 4000);\n    }\n  }\n\n  drawRectangle() {\n    const width: number = 250;\n    const height: number = 120;\n    const graphics = this.AvatarNode.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  drawRectangle1() {\n    const width: number = 220;\n    const height: number = 110;\n    const graphics = this.AvatarNode1.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  drawRectangle2() {\n    const width: number = 220;\n    const height: number = 110;\n    const graphics = this.AvatarNode2.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  drawRectangle3() {\n    const width: number = 220;\n    const height: number = 110;\n    const graphics = this.AvatarNode3.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  drawRectangleTotalUser(number: number) {\n    const width: number = 60;\n    const height: number = 20;\n    const graphics = this.ToatalUser[number].addComponent(Graphics);\n    const lightGray = new Color(0, 0, 0, 255);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 2);\n    graphics.fill();\n    graphics.stroke();\n\n    const circleRadius: number = 10;\n    graphics.fillColor = Color.WHITE; // Màu trắng\n    graphics.strokeColor = Color.BLACK; // Viền màu đen\n    graphics.circle(-20, 0, circleRadius); // Vẽ hình tròn tại tọa độ (0,0) với bán kính circleRadius\n    graphics.fill(); // Tô màu\n    graphics.stroke(); // Vẽ viền\n  }\n  private drawRectangleTotal(list: number) {\n    const width: number = 100;\n    const height: number = 70;\n    const graphics = this.ToatalAv[list].addComponent(Graphics);\n    const lightGray = new Color(0, 0, 0, 255);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 1;\n\n    // Tính toán các điểm để vẽ viên thuốc\n    const centerX = 0;\n    const centerY = 0;\n    const pillHeight = height * 0.6; // Chiều cao của viên thuốc\n    const pillWidth = width * 0.8; // Chiều rộng của viên thuốc\n    const pillRadius = pillHeight / 2; // Bán kính của đầu viên thuốc\n    const bodyWidth = width * 0.5; // Chiều rộng của phần thân viên thuốc\n\n    // Vẽ phần thân của viên thuốc\n    graphics.rect(\n      centerX - bodyWidth / 2,\n      centerY - pillRadius,\n      bodyWidth,\n      pillHeight\n    );\n\n    // Vẽ đầu viên thuốc bên trái\n    graphics.arc(\n      centerX - pillWidth / 2 + pillRadius,\n      centerY,\n      pillRadius,\n      -Math.PI / 2,\n      Math.PI / 2,\n      false\n    );\n\n    // Vẽ đầu viên thuốc bên phải\n    graphics.arc(\n      centerX + pillWidth / 2 - pillRadius,\n      centerY,\n      pillRadius,\n      Math.PI / 2,\n      -Math.PI / 2,\n      false\n    );\n\n    graphics.fill(); // Đổ màu\n    graphics.stroke(); // Vẽ viền\n  }\n  drawRectanglel(Avatar: Node) {\n    const width: number = 220;\n    const height: number = 100;\n    const graphics = Avatar.addComponent(Graphics);\n    // graphics.rect(-width / 2, -height / 2, width, height);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  createSpriteNode(posX, PosY, PosNode: Node) {\n    // Tạo một Node mới\n    const spriteNode = new Node(\"SpriteNode\");\n    spriteNode.scale = new Vec3(0.5, 0.5);\n\n    // Thêm một component Sprite vào Node\n    const spriteComponent = spriteNode.addComponent(Sprite);\n\n    // Gán SpriteFrame cho component Sprite\n    spriteComponent.spriteFrame =\n      this.chipNode.buttonPub.node.getComponent(Sprite).spriteFrame;\n    // spriteNode.position=new Vec3(this.chipNode.buttonPub.node.position)\n    // Thêm Node vào Scene hiện tại (ví dụ: Node cha của tất cả Sprite)\n    PosNode.addChild(spriteNode);\n    tween(spriteNode)\n      .to(0.3, { position: new Vec3(posX, PosY) })\n      .start();\n  }\n\n  createSpriteNodePay(posX, posY, posNode: Node, spriteFrames: SpriteFrame[]) {\n    // Lặp qua từng sprite frame để tạo node tương ứng\n    for (let i = 0; i < spriteFrames.length; i++) {\n      // Tạo một Node mới\n      const spriteNode = new Node(\"SpriteNode\");\n      spriteNode.scale = new Vec3(0.5, 0.5);\n\n      // Thêm một component Sprite vào Node\n      const spriteComponent = spriteNode.addComponent(Sprite);\n\n      // Gán SpriteFrame cho component Sprite dựa trên index\n      spriteComponent.spriteFrame = spriteFrames[i];\n\n      // Thêm Node vào Scene hiện tại (ví dụ: Node cha của tất cả Sprite)\n      posNode.addChild(spriteNode);\n\n      // Tween Node đến vị trí mong muốn\n      tween(spriteNode)\n        .delay(i * 0.1) // thiết lập thời gian trễ dựa trên index của node\n        .to(0.3, { position: new Vec3(posX, posY) })\n        .call(() => {\n          spriteNode.active = false;\n        })\n        .start();\n    }\n  }\n\n  drawGrid(Grid: Node) {\n    const numRows: number = this.numRows;\n    const numCols: number = this.numCols;\n    const gridSize: number = Math.min(575 / numCols, 200 / numRows); // Kích thước ô vuông\n    const cellWidth: number = this.cellWidth; // Chiều rộng của mỗi ô\n    const cellHeight: number = this.cellHeight; // Chiều cao của mỗi ô\n\n    const graphics = Grid.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 50);\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 4;\n\n    // Vẽ các đường ngang\n    for (let i = 0; i <= numRows; i++) {\n      const y = i * cellHeight - (numRows * cellHeight) / 2; // Đặt lưới vào giữa theo chiều cao\n      graphics.moveTo((-numCols * cellWidth) / 2, y);\n      graphics.lineTo((numCols * cellWidth) / 2, y);\n      graphics.stroke();\n    }\n\n    for (let j = 0; j <= numCols; j++) {\n      const x = j * cellWidth - (numCols * cellWidth) / 2; // Đặt lưới vào giữa theo chiều rộng\n      graphics.moveTo(x, (-numRows * cellHeight) / 2);\n      graphics.lineTo(x, (numRows * cellHeight) / 2);\n      graphics.stroke();\n    }\n\n    // Tô màu cho lưới\n    graphics.fillColor = lightGray;\n    graphics.rect(\n      (-numCols * cellWidth) / 2,\n      (-numRows * cellHeight) / 2,\n      numCols * cellWidth,\n      numRows * cellHeight\n    );\n    graphics.fill();\n  }\n\n  private createGrid() {\n    let prefabType;\n    if (this.randomValueCardL === this.randomValueCardR) {\n      prefabType = this.Tie;\n    } else if (this.randomValueCardL < this.randomValueCardR) {\n      prefabType = this.Under;\n    } else if (this.randomValueCardL > this.randomValueCardR) {\n      prefabType = this.Over;\n    }\n\n    if (\n      this.currentRowClone > 5 &&\n      prefabType.name !== this.previousPrefabType.name\n    ) {\n      this.currentCol++;\n      // this.currentRow = 0;\n      if (this.currentCol >= this.numCols) {\n        this.clearGrid();\n        this.currentCol = 0;\n      }\n    }\n    if (\n      this.previousPrefabType !== null &&\n      prefabType.name !== this.previousPrefabType.name\n    ) {\n      this.currentCol++;\n      this.currentRow = 0;\n      this.currentRowClone = 0;\n      if (this.currentCol >= this.numCols) {\n        this.clearGrid();\n        this.currentCol = 0;\n      }\n    }\n\n    const cell = instantiate(prefabType);\n    const posX = this.currentCol * this.cellWidth;\n    const posY = -this.currentRow * this.cellHeight;\n    cell.position = new Vec3(posX, posY);\n    this.pref.addChild(cell);\n\n    this.previousPrefabType = prefabType;\n    this.currentRowClone++;\n    if (this.currentRow < 5) {\n      this.currentRow++;\n    }\n  }\n\n  private clearGrid() {\n    this.pref.removeAllChildren();\n  }\n\n  private createGridNot() {\n    let prefabType;\n    if (this.randomValueCardL === this.randomValueCardR) {\n      prefabType = this.Tie;\n    } else if (this.randomValueCardL < this.randomValueCardR) {\n      prefabType = this.Under;\n    } else if (this.randomValueCardL > this.randomValueCardR) {\n      prefabType = this.Over;\n    }\n    if (this.currentRowL >= this.numRows) {\n      this.currentColL++;\n      this.currentRowL = 0;\n      if (this.currentColL >= this.numCols) {\n        this.clearGridNt();\n        this.currentCol = 0;\n      }\n    }\n    const cell = instantiate(prefabType);\n    const posX = this.currentColL * this.cellWidth; // Tính vị trí x dựa trên chỉ mục cột hiện tại\n    const posY = -this.currentRowL * this.cellHeight; // Tính vị trí y dựa trên chỉ mục hàng hiện tại\n    cell.position = new Vec3(posX, posY);\n    this.prefL.addChild(cell);\n    this.currentRowL++;\n  }\n\n  private clearGridNt() {\n    this.prefL.removeAllChildren();\n  }\n\n  private startCountdown(timeCountDown: number, timereset: number) {\n    this.countdownTimerBet = 30;\n    const countdownInterval = setInterval(() => {\n      this.countdownTimerBet--;\n      if (this.countdownTimerBet <= 0) {\n        clearInterval(countdownInterval);\n      }\n    }, 1000);\n  }\n\n  private Cancel() {\n    if (this.GameEnd === false) {\n      this.ToatalUser[0].active = false;\n      this.ToatalUser[1].active = false;\n      this.ToatalUser[2].active = false;\n      this.listCancelBet[0].node.active = false;\n      this.listCancelBet[1].node.active = false;\n      this.listCancelBet[2].node.active = false;\n      this.listCancelBet[3].node.active = false;\n      this.UserBetDragonIcon = 0;\n      this.UserBetTieIcon = 0;\n      this.UserBetTigerIcon = 0;\n      this.balanceUser = this.balanceUser + this.cloneBalance;\n      this.cloneBalance = 0;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.betDragonLb.string = this.UserBetDragonIcon.toString();\n      this.betTigerLb.string = this.UserBetTigerIcon.toString();\n      this.betTieLb.string = this.UserBetTieIcon.toString();\n      this.ValueAnim.removeAllChildren();\n      this.ValueAnim1.removeAllChildren();\n      this.ValueAnim2.removeAllChildren();\n    }\n  }\n\n  private RestartBalnce() {\n    this.ToatalUser[0].active = false;\n    this.ToatalUser[1].active = false;\n    this.ToatalUser[2].active = false;\n    this.listCancelBet[0].node.active = false;\n    this.listCancelBet[1].node.active = false;\n    this.listCancelBet[2].node.active = false;\n    this.listCancelBet[3].node.active = false;\n    this.UserBetDragonIcon = 0;\n    this.UserBetTieIcon = 0;\n    this.UserBetTigerIcon = 0;\n    this.cloneBalance = 0;\n    this.betDragonLb.string = this.UserBetDragonIcon.toString();\n    this.betTigerLb.string = this.UserBetTigerIcon.toString();\n    this.betTieLb.string = this.UserBetTieIcon.toString();\n    this.ValueAnim.removeAllChildren();\n    this.ValueAnim1.removeAllChildren();\n    this.ValueAnim2.removeAllChildren();\n  }\n\n  private CancelBetTiger() {\n    if (this.GameEnd === false) {\n      this.ToatalUser[2].active = false;\n      this.listCancelBet[1].node.active = false;\n\n      this.cloneBalance = this.cloneBalance - this.UserBetTigerIcon;\n      this.balanceUser = this.balanceUser + this.UserBetTigerIcon;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.UserBetTigerIcon = 0;\n      this.betTigerLb.string = this.UserBetTigerIcon.toString();\n      this.ValueAnim.removeAllChildren();\n    }\n  }\n\n  private CancelBetDragon() {\n    if (this.GameEnd === false) {\n      this.ToatalUser[0].active = false;\n      this.listCancelBet[3].node.active = false;\n      this.cloneBalance = this.cloneBalance - this.UserBetDragonIcon;\n      this.balanceUser = this.balanceUser + this.UserBetDragonIcon;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.UserBetDragonIcon = 0;\n      this.betDragonLb.string = this.UserBetDragonIcon.toString();\n      this.ValueAnim1.removeAllChildren();\n    }\n  }\n\n  private CancelBetTie() {\n    if (this.GameEnd === false) {\n      this.ToatalUser[1].active = false;\n      this.listCancelBet[2].node.active = false;\n\n      this.cloneBalance = this.cloneBalance - this.UserBetTieIcon;\n      this.balanceUser = this.balanceUser + this.UserBetTieIcon;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.UserBetTieIcon = 0;\n      this.betTieLb.string = this.UserBetTieIcon.toString();\n      this.ValueAnim2.removeAllChildren();\n    }\n  }\n\n  tweenChildrenToPosition(node: Node, targetPosition: Vec3, duration: number) {\n    node.children.forEach((child: Node) => {\n      tween(child)\n        .to(duration, { position: targetPosition })\n        .call(() => {\n          child.removeFromParent();\n          this.createSpriteNodePay(\n            -1450,\n            1,\n            this.PayUser[0],\n            this.PayUserSprite\n          );\n          this.createSpriteNodePay(\n            -1450,\n            -100,\n            this.PayUser[1],\n            this.PayUserSprite\n          );\n          this.createSpriteNodePay(\n            -1450,\n            -200,\n            this.PayUser[2],\n            this.PayUserSprite\n          );\n          this.createSpriteNodePay(\n            -1450,\n            -300,\n            this.PayUser[3],\n            this.PayUserSprite\n          );\n          this.createSpriteNodePay(\n            -1450,\n            -400,\n            this.PayUser[4],\n            this.PayUserSprite\n          );\n          this.createSpriteNodePay(\n            -1450,\n            -500,\n            this.PayUser[5],\n            this.PayUserSprite\n          );\n\n          this.createSpriteNodePay(\n            0,\n            -500,\n            this.PayUser[6],\n            this.PayUserSprite\n          );\n        })\n\n        .start();\n    });\n  }\n}\n"]}